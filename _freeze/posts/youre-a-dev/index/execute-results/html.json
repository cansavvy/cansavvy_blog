{
  "hash": "df447acdd85ef107c718234a2b6d534e",
  "result": {
    "markdown": "---\ntitle: \"3  signs you might accidentally be a software developer\"\nauthor: \"Candace Savonen\"\ndate: \"2023-08-29\"\ncategories: [data science, informatics, research]\n\n---\n\n\n\n\n\n1. You have written code to build something in the past.\n2. You are currently writing code to build something in the present.\n3. You will continue to write code to build things in the future. \n\nSoftware developers jobs are often defined something like this: \n\n** Software developers use programming to build **software** that meets the needs of **users**.**\n\nLet's break this down: \n\n- `Software` is often meaning a collection of instructions, data, or computer programs that are used to run machines and carry out particular activities -- this can include but isn't limited to: \n  - Scripts\n  - Workflows\n  - Pipelines\n  - Algorithms and computational methods \n\nScientific software for cancer research includes all of the above items pretty frequently but scientists often don't think of themselves as software developers. I think this is in part because they don't picture that they have **users*. \n\nBut `Users` can really be anyone! It may start as the person developing the software but may expand to collaborators, random internet strangers, and others in the broader scientifiy community. The scientific community is full of users!\n\nSo in fact, many scientific researchers are doing *software development* everyday! But many don't have a computer science degree and many of them have never taken a programming class (That includes me -- I'm not sure how I got here!). Self-taught scientific programmers (like myself) may dismiss themselves as being software developers since they often think of programming as a means to an end -- a scientific question may be their main goal. But in the pursuit of that goal they are doing software development along the way!\n\nThe self-taught nature of many software programmers may also lead them to feel like they don't know what they are doing when it comes to programming and thus must not actually be software developers. But just because you are new to something, doesn't mean you aren't actually performing the skillset and doing the thing!\n\n![](https://media.giphy.com/media/Dh5q0sShxgp13DwrvG/giphy.gif) \n\nBut perhaps we should start including \"software developer\" into our identity schemas. Perhaps if we thought of this as one of our many hats we might be able to better adapt what more \"traditionally trained\" software developers do as a part of their development process. ([The Pragmatic Programmer](https://pragprog.com/) is a pretty big giant for discussing these skill sets and a good read).\n\n![](https://media.giphy.com/media/pPr6b7vYj1en4ywCiT/giphy.gif)\n\nWhat best practices do folks who are full-time \"traditional\" software developers use to do their work? This is where multidiscplinary bridges built between fields will really come in handy. \n\nI learned the most about software development when I worked in a lab that was very multidiscplinary and included computer scientists, user experience designers, back-end developers, and front-end developers. Each of these individuals had their own special skill sets that we could all benefit from learning from each other about. Any given individual can't possibly be an expert in all of these tasks, but if we all are doing a bit of software development, we should definitely try to learn from folks who might have been doing this work a bit longer. Then we can use our scientific knowledge and expertise to apply skills we learn from others to new applications! \n\nAnd this type of multidisciplinary collaboration is my favorite part about science! But warning, to fully utilize this kind of collaboration requires a lot of **soft skills** development...\n\n**Examples:**\n\n- Clear communication that is tailored to your audience. \n- Humility to recognize when something is outside your realm of knowledge. \n- Honesty and confidence to admit you don't know and that is okay!\n- Patience to figure out communication with each other. \n\n.... And **soft** skills are actually really **hardest** but are really the foundation of everything else going smoothly! \n\n\nIn conclusion: You're a <s>wizard</s> software developer, Harry\n\n![](resources/images/youreadev.jpg)\n\n<script src=\"https://utteranc.es/client.js\"\n        repo=\"cansavvy/cansavvy_blog\"\n        issue-term=\"title\"\n        label=\"Commenter on blog post\"\n        theme=\"boxy-light\"\n        crossorigin=\"anonymous\"\n        async>\n</script>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.1 (2023-06-16)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.5.2\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] vctrs_0.6.3       httr_1.4.7        cli_3.6.1         knitr_1.44.1     \n [5] rlang_1.1.1       xfun_0.40         jsonlite_1.8.7    glue_1.6.2       \n [9] openssl_2.1.0     askpass_1.2.0     htmltools_0.5.6   hms_1.1.3        \n[13] fansi_1.0.4       rmarkdown_2.25    evaluate_0.21     tibble_3.2.1     \n[17] tzdb_0.4.0        fastmap_1.1.1     yaml_2.3.7        lifecycle_1.0.3  \n[21] compiler_4.3.1    ottrpal_1.2       fs_1.6.3          htmlwidgets_1.6.2\n[25] pkgconfig_2.0.3   rstudioapi_0.15.0 digest_0.6.33     R6_2.5.1         \n[29] utf8_1.2.3        readr_2.1.4       pillar_1.9.0      magrittr_2.0.3   \n[33] tools_4.3.1       xml2_1.3.5       \n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}